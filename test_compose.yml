services:

  db:
    container_name: test_db
    image: postgres:14-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USERNAME: postgres
      POSTGRES_DB: C9_CP9
    networks:
      net1:
        ipv4_address: 172.20.0.2

  api_model:
    container_name: test_api_model
    image: markreduce/devia_titre:api_model
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_PASSWORD: password
      DB_NAME: postgres
      DB_USERNAME: postgres
      SECRET_KEY: randomkeyrandomkeyrandomkeyrandomkeyrandomkeyrandomkeyrandomkeyrandomkeyrandomkey 
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 60
      ENVIRONNEMENT: dev
      HF_HOME: hf_cache
      MODEL_PATH: statics/model/
      TOKEN_PATH: statics/tokenizer/
      TEST_MODEL_PATH: ./app/statics/model/
      TEST_TOKEN_PATH: ./app/statics/tokenizer/
      ALLOWED_ORIGINS: http://127.0.0.1:8000, http://127.0.0.1:9090
      TEST_DB_NAME: C9_CP9_test
      PROMETHEUS_USERNAME: foo
      PROMETHEUS_PASSWORD: bar
      POSTGRES_PASSWORD: password
      POSTGRES_USERNAME: postgres
      POSTGRES_DB: C9_CP9
    volumes:
      - model_vol:/app/statics
    ports:
      - "127.0.0.1:8000:8000"
    networks:
      net1:
        ipv4_address: 172.20.0.3
    depends_on:
      - db
    restart: always
volumes:
  postgres-data:
  model_vol:
    external: true
networks:
  net1:
    name: net1
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1