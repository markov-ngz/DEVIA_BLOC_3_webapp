name: Django CI 

on:
  pull_request:
    branches: [ "prod" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]
    services:

      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DB_NAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432
      SECRET_KEY: django-insecure-q$=7f6c=$gb4+8293%^ig)=4hva^+gujxdy2thu5(n0&*y5*eh
      API_AI_USER: usertest@gmail.com
      API_AI_PWD: password
      API_AI_URL: http://localhost:8000
      DEBUG: True

    steps:

    - uses: actions/checkout@v4 # checkout repo
    - name: Login to Docker Hub
      uses: docker/login-action@v3  
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Create the model volume
      run: |
        docker volume create model_vol 
        docker run --volume model_vol -d markreduce/devia_titre:model 

    - name: Setup the test "infrastructure"
      run: docker compose --file test_compose.yml up -d

    - name: Create the test user 
      run : |
        curl -X 'POST' \
        'http://127.0.0.1:8000/signup/' \
        -H 'accept: application/json' \
        -H 'Content-Type: application/json' \
        -d '{ "email": "ruler@geng.int", "password": "xayah"}'

    - name: Set up Python ${{ matrix.python-version }} 
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Setup database
      run: |
        cd slovo
        mkdir logs
        python manage.py migrate

    - name: Run Tests
      run: |
        cd slovo
        python manage.py test


  build-and-push:
    runs-on: ubuntu-latest
    needs: test  

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3  
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_APPNAME }}:webapp .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_APPNAME }}:webapp
